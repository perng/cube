%!PS-Adobe-3.0
%%BoundingBox: 18 36 594 756
%%Title: Enscript Output
%%Creator: GNU Enscript 1.6.5.90
%%CreationDate: Sun Apr 28 20:36:06 2019
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6.5 90
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6.5 90
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6.5 90

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 576 def
/d_page_h 720 def
/d_header_x 0 def
/d_header_y 705 def
/d_header_w 576 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 576 def
/d_footer_h 0 def
/d_output_w 576 def
/d_output_h 705 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
18 36 translate
/pagenum 1 def
/fname (festkomma.h) def
/fdir (.) def
/ftail (festkomma.h) def
% User defined strings:
/fmodstr (Sun Apr 28 20:34:37 2019) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 692 M
(/****************************************************************) s
5 670 M
(file festkomma.h) s
5 648 M
(Elkies package for the three cubes problem,) s
5 637 M
(Version 1.0) s
5 615 M
(*****************************************************************/) s
5 582 M
(#include<gmp.h>) s
5 560 M
(typedef unsigned long int UDItype;) s
5 549 M
(typedef long int           DItype;) s
5 516 M
(#define MAX\(h, i\) \(\(h\) > \(i\) ? \(h\) : \(i\)\)) s
5 505 M
(#define MIN\(h, i\) \(\(h\) < \(i\) ? \(h\) : \(i\)\)) s
5 483 M
(/* The g ++ compiler relies on the normal macros add_ssaaaa and subf_ddmmss) s
5 472 M
(   not because there is a strange cast to be made while writing. */) s
5 461 M
(#define addf_ssaaaa\(sh, sl, ah, al, bh, bl\)                       \\) s
5 450 M
(  __asm__ \("addq %5,%1\\n\\tadcq %3,%0"                             \\) s
5 439 M
(           : "=r" \(sh\),           "=&r" \(sl\)                      \\) s
5 428 M
(           : "0"  \(\(UDItype\)\(ah\)\), "g" \(\(UDItype\)\(bh\)\),           \\) s
5 417 M
(             "%1" \(\(UDItype\)\(al\)\), "g" \(\(UDItype\)\(bl\)\)\)) s
5 395 M
(#define subf_ddmmss\(sh, sl, ah, al, bh, bl\)                       \\) s
5 384 M
(  __asm__ \("subq %5,%1\\n\\tsbbq %3,%0"                             \\) s
5 373 M
(           : "=r" \(sh\), "=&r" \(sl\)                                \\) s
5 362 M
(           : "0" \(\(UDItype\)\(ah\)\), "g" \(\(UDItype\)\(bh\)\),            \\) s
5 351 M
(             "1" \(\(UDItype\)\(al\)\), "g" \(\(UDItype\)\(bl\)\)\)) s
5 329 M
(#define umul_ppmm\(w1, w0, u, v\)                                   \\) s
5 318 M
(  __asm__ \("mulq %3"                                              \\) s
5 307 M
(           : "=a" \(w0\), "=d" \(w1\)                                 \\) s
5 296 M
(           : "%0" \(\(UDItype\)\(u\)\), "rm" \(\(UDItype\)\(v\)\)\)) s
5 274 M
(#define smul_ppmm\(w1, w0, u, v\)                                   \\) s
5 263 M
(  __asm__ \("imulq %3"                                             \\) s
5 252 M
(           : "=a" \(w0\), "=d" \(w1\)                                 \\) s
5 241 M
(           : "%0" \(\(DItype\)\(u\)\), "rm" \(\(DItype\)\(v\)\)\)) s
5 208 M
(/* Can encode two types of fixed-point numbers.) s
5 197 M
(   1. A number between 0 and 1 with precision 2 * \(- 128\) according to the rule) s
5 186 M
(          fixed [1] * 2 ** \(- 64\) + fixed [0] * 2 ** \(- 128\).) s
5 175 M
(      Data type "mpx_t".) s
5 164 M
(   2. A signed number between \(-2 ** 63\) and 2 ** 63 with accuracy) s
5 153 M
(      2 * \(- 64\) according to the rule) s
5 142 M
(          \(signed long\) fixed [1] + fixed [0] * 2 ** \(- 64\).) s
5 131 M
(      Data type "mpxg_t".*/) s
5 120 M
(typedef unsigned long int mpx_t [2];) s
5 87 M
(/* The naive conversion of mpxg_t into double.*/) s
5 76 M
(#define mpxg_get_d_simple\(fixed\)                                  \\) s
5 65 M
(  \(ldexp \(\(\(double\) \(fixed\)[0]\), -64\)                             \\) s
5 54 M
(+ \(\(double\) \(\(signed long\) \(fixed\)[1]\)\)\)) s
5 21 M
(/* Conversion of mpxg_t into double.) s
5 10 M
(   For values \342\\200\\213\342\\200\\213close to 0, you want very high accuracy.) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
18 36 translate
/pagenum 2 def
/fname (festkomma.h) def
/fdir (.) def
/ftail (festkomma.h) def
% User defined strings:
/fmodstr (Sun Apr 28 20:34:37 2019) def
/pagenumstr (2) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 692 M
(   Even at those just under 0, as) s
5 681 M
(         \(-1\) + fixed [0] * 2 ** \(- 64\)) s
5 670 M
(   are. */) s
5 659 M
(inline double mpxg_get_d \(mpx_t fixed\) {) s
5 648 M
( /* fixed[0] >= 2**63 <==> gebrochener Teil >= 0.5. */) s
5 637 M
( if \(\(signed long\) fixed[0] < 0\) {) s
5 626 M
(  /* Artfully complicated conversion into double.) s
5 615 M
(     The first addend is [erg] - 1, which may be small) s
5 604 M
(     and can be converted into double exactly. */) s
5 593 M
(  return \(- ldexp \(\(\(double\) -fixed[0]\), -64\)) s
5 582 M
(                 + \(\(double\) \(1 + \(signed long\) fixed[1]\)\)\);) s
5 571 M
( }) s
5 560 M
( /* The naive conversion into double.) s
5 549 M
(  fixed [1] should be understood as signed. */) s
5 538 M
( return \(   ldexp \(\(\(double\) fixed[0]\), -64\) ) s
5 527 M
(                 + \(\(double\) \(\(signed long\) fixed[1]\)\)\);) s
5 516 M
(}) s
5 483 M
(/* The naive conversion of mpx_t into double. */) s
5 472 M
(#define mpx_get_d\(fixed\)                                          \\) s
5 461 M
(   \(ldexp \(\(\(double\) \(fixed\)[1]\), -64\)                            \\) s
5 450 M
( + ldexp \(\(\(double\) \(fixed\)[0]\), -128\)\)) s
5 417 M
(/* requirement: 0 < floa < 1. */) s
5 406 M
(inline void mpx_set_d \(mpx_t erg, double floa\) {) s
5 395 M
( floa = ldexp \(floa, 64\);) s
5 384 M
( erg[1] = \(ulong\) floor \(floa\);) s
5 373 M
( floa -= erg[1];) s
5 362 M
( floa = ldexp \(floa, 64\);) s
5 351 M
( erg[0] = \(ulong\) floor \(floa\);) s
5 340 M
( /* Hier darf kein lround stehen. Gibt Probleme bei Zahlen >2**63! */) s
5 329 M
(}) s
5 296 M
(/* requirement: 0 < floa < 1. Precision von fl >=128 Bit. ) s
5 285 M
(   Attention: extremely inefficient! */) s
5 274 M
(inline void mpx_set_mpf \(mpx_t erg, mpf_t fl\) {) s
5 263 M
( /* Efficient code looks like this:) s
5 252 M
( mp_ptr  ptr;) s
5 241 M
( long    pos;) s
5 230 M
( ptr = PTR \(fl\);) s
5 219 M
( pos = ABSIZ \(fl\) - 1;) s
5 208 M
( erg[1] = ptr[pos];) s
5 197 M
( erg[0] = ptr[pos - 1]; */) s
5 175 M
( mpf_t  tmp;) s
5 153 M
( mpf_init \(tmp\);) s
5 142 M
( mpf_mul_2exp \(tmp, fl, 64\);) s
5 131 M
( erg[1] = mpf_get_ui \(tmp\);) s
5 120 M
( mpf_sub_ui \(tmp, tmp, erg[1]\);) s
5 109 M
( mpf_mul_2exp \(tmp, tmp, 64\);) s
5 98 M
( erg[0] = mpf_get_ui \(tmp\);) s
5 87 M
( mpf_clear \(tmp\);) s
5 76 M
(}) s
5 43 M
(/* Intended for output with gmp_printf. Has certainly optimization potential. */) s
5 32 M
(inline void mpf_set_mpx \(mpf_t erg, mpx_t fixed\) {) s
5 21 M
( mpf_set_ui \(erg, fixed[0]\);) s
5 10 M
( mpf_div_2exp \(erg, erg, 64\);) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
18 36 translate
/pagenum 3 def
/fname (festkomma.h) def
/fdir (.) def
/ftail (festkomma.h) def
% User defined strings:
/fmodstr (Sun Apr 28 20:34:37 2019) def
/pagenumstr (3) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 692 M
( mpf_add_ui \(erg, erg, fixed[1]\);) s
5 681 M
( mpf_div_2exp \(erg, erg, 64\);) s
5 670 M
(}) s
5 637 M
(/* Product of two mpx_t numbers \(128-bit fixed-point numbers between 0 and 1\).) s
5 626 M
(   Not for data type mpxg_t. */) s
5 615 M
(inline void mpx_mul \(mpx_t erg, mpx_t fak1, mpx_t fak2\) {) s
5 604 M
( ulong  argh, argl;) s
5 582 M
( /* Main part of the product. */) s
5 571 M
( umul_ppmm \(erg[1], erg[0], fak1[1], fak2[1]\);) s
5 560 M
( /* Multiplication over cross. Ignore the third limb. */) s
5 549 M
( umul_ppmm \(argh, argl, fak1[1], fak2[0]\);) s
5 538 M
( addf_ssaaaa \(erg[1], erg[0], erg[1], erg[0], 0L, argh\);) s
5 527 M
( /* Multiplication over cross the other way round. Ignore again the third limb. */) s
5 516 M
( umul_ppmm \(argh, argl, fak1[0], fak2[1]\);) s
5 505 M
( addf_ssaaaa \(erg[1], erg[0], erg[1], erg[0], 0L, argh\);) s
5 494 M
( /* Leave the product of low-end limbs completely gone. */) s
5 483 M
(}) s
5 450 M
(/* Unsigned fixed point * long.) s
5 439 M
(   fix is \342\\200\\213\342\\200\\213unsigned fixed-point, that is, of the data type mpx_t.) s
5 428 M
(   The result erg is a signed fixed point of the data type mpxg_t.*/) s
5 417 M
(inline void mpx_mul_si \(mpx_t erg, mpx_t fix, long ganz\) {) s
5 406 M
( ulong  argh, argl;) s
5 384 M
( /* Treat as unsigned. */) s
5 373 M
( umul_ppmm \(erg[1], erg[0], fix[1], ganz\);) s
5 362 M
( umul_ppmm \(argh, argl, fix[0], ganz\);) s
5 351 M
( /* Ignore argl. */) s
5 340 M
( addf_ssaaaa \(erg[1], erg[0], erg[1], erg[0], 0, argh\);) s
5 318 M
( /* Correction if completely <0.) s
5 307 M
(     We counted on quite an error of exactly 2 ** 64. */) s
5 296 M
( if \(ganz < 0\)) s
5 285 M
(  subf_ddmmss \(erg[1], erg[0], erg[1], erg[0], fix[1], fix[0]\);) s
5 274 M
(}) s
5 241 M
(/* Works with mpx_t as mpxg_t. */) s
5 230 M
(#define mpx_add\(summe, summand1, summand2\)                        \\) s
5 219 M
( addf_ssaaaa \(summe[1], summe[0], summand1[1], summand1[0],       \\) s
5 208 M
(                                  summand2[1], summand2[0]\)) s
5 175 M
(/* Works with mpx_t as mpxg_t. */) s
5 164 M
(#define mpx_sub\(differenz, minuend, subtrahend\)                   \\) s
5 153 M
( subf_ddmmss \(differenz[1], differenz[0], minuend[1], minuend[0], \\) s
5 142 M
(                                    subtrahend[1], subtrahend[0]\)) s
5 109 M
(/* Works on summand1 of the data type mpx_t or mpxg_t. summand2 is a long one.) s
5 98 M
(   Overflow is also here, as always with add and sub, in the application) s
5 87 M
(   to pay attention. */) s
5 76 M
(#define mpxb_add_si\(summe, summand1, summand2\)                    \\) s
5 65 M
( addf_ssaaaa \(summe[1], summe[0], summand1[1], summand1[0],       \\) s
5 54 M
(                                                    summand2, 0\)) s
_R
S
%%Trailer
%%Pages: 3
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
